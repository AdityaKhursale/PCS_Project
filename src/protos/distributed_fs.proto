syntax = "proto3";

service DistributedFileSystem {

    // Client side functions

    rpc CreateFile(CreateRequest) returns (CreateResponse) {}

    rpc ListFiles(ListRequest) returns (ListResponse) {}

    rpc ReadFile(ReadRequest) returns (ReadResponse) {}

    rpc UpdateFile(UpdateRequest) returns (UpdateResponse) {}

    rpc DeleteFile(DeleteRequest) returns (DeleteResponse) {}

    rpc RestoreFile(RestoreRequest) returns (RestoreResponse) {}

    rpc GrantPermisions(PermissionRequest) returns (PermissionResponse) {}

    // Replication functions

    rpc ReplicateFile(ReplicateFileRequest) returns (ReplicateFileResponse) {}

    rpc ReplicatePermissions(ReplicatePermissionRequest)
        returns (ReplicatePermissionResponse) {}

    rpc ReplicateDeleteFile(ReplicateDeleteRequest)
        returns (ReplicateDeleteResponse) {}

    rpc UpdateNodePublicKey(UpdateKeyRequest) returns (UpdateKeyResponse) {}

    rpc GetFileLock(FileLockRequest) returns (FileLockResponse) {}
}

message CreateRequest { string filename = 1; }

message CreateResponse {}

message ListRequest {}

message ListResponse { repeated string files = 1; }

message ReadRequest { string filename = 1; }

message ReadResponse {
  string filecontent = 1;
  string status = 2;
}

message UpdateRequest {
    string filename = 1;
    string filecontent = 2;
    bool overwrite = 3;
}

message UpdateResponse {}

message DeleteRequest { string filename = 1; }

message DeleteResponse { string status = 1;}

message RestoreRequest { string filename = 1; }

message RestoreResponse {}

message PermissionRequest {
    string filename = 1;
    string hostname = 2; // for now accept 127.0.0.1 : 50051
    string permission = 3; // accepts either 'read' or 'write'
}

message PermissionResponse {string status = 1;}

message ReplicateFileRequest {
    string fileId = 1;
    string fileName = 2;
    string owner = 3;
    string fileContent = 4;
}

message ReplicateFileResponse { string status = 1; }

message ReplicatePermissionRequest {
    string fileId = 1;
    string filePublicKey = 2;
    string filePrivateKey = 3;
}

message ReplicatePermissionResponse { string status = 1; }

message ReplicateDeleteRequest { string fileId = 1; }

message ReplicateDeleteResponse { string status = 1; }

message UpdateKeyRequest {
    string hostname = 1;
    string address = 2;
    string publicKey = 3;
}

message UpdateKeyResponse { string status = 1; }

message FileLockRequest { string fileId = 1; }

message FileLockResponse { bool lockGranted = 1; }
